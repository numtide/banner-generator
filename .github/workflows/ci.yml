name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.23'
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: make test

    - name: Run linters
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --no-config

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build API
      run: make build-api

    - name: Build CLI
      run: make build-cli

    - name: Upload API artifact
      uses: actions/upload-artifact@v4
      with:
        name: banner-api
        path: bin/banner-api

    - name: Upload CLI artifact
      uses: actions/upload-artifact@v4
      with:
        name: banner-cli
        path: bin/banner-cli

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [test, build]
    # Only deploy on push to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Fly.io
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io
      run: flyctl deploy --remote-only --config deploy/fly.toml --dockerfile deploy/Dockerfile
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [test, build]
    # Only run on tags
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/banner-api/banner-api
          artifacts/banner-cli/banner-cli
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}